os: "WMF 5"
version: 1.0.{build}

environment:
  ModuleName: "DataProtectionManagerCX"
  ScriptAnalyzerSeverity: "Error"

branches:
  only:
    - master

skip_commits:
  message: /updated readme.*|update readme.*s/

install:
  - ps: Get-PackageProvider -Name NuGet -ForceBootstrap | Out-Null
  - ps: Install-Module Pester -Force
  - ps: Install-Module PsScriptAnalyzer -Force

build: off

test_script:
  - ps: |
      #--------------------#
      #       Pester       #
      #--------------------#
      Add-AppveyorTest -Name "Pester" -Outcome Running
      $testResults = '.\TestResults.xml'
      $res = Invoke-Pester -OutputFormat NUnitXml -OutputFile $testResults -CodeCoverage (Get-ChildItem *.ps*1 -Recurse) -PassThru
      Push-AppveyorArtifact $testResults
      if ($res.FailedCount -gt 0) {
          Add-AppveyorMessage -Message "Pester: $($res.FailedCount) tests failed." -Category Error
          Update-AppveyorTest -Name 'Pester' -Outcome Failed -ErrorMessage "$($res.FailedCount) tests failed."
          throw "$($res.FailedCount) tests failed."
      }
      else {
          Update-AppveyorTest -Name 'Pester' -Outcome Passed -Duration ([long]$res.Time.TotalMilliseconds)
          $codeCoveragePercent = (($res.CodeCoverage.NumberOfCommandsExecuted) / ($res.CodeCoverage.NumberOfCommandsAnalyzed)) * 100
          Add-AppveyorMessage -Message "Code Coverage: $("{0:N2}" -f $codeCoveragePercent)%" -Category Information
      }
      #--------------------#
      #   ScriptAnalyzer   #
      #--------------------#
      Add-AppveyorTest -Name "ScriptAnalyzer" -Outcome Running
      $start = Get-Date
      $res = Get-ChildItem *.ps*1 -Recurse | Invoke-ScriptAnalyzer -Severity $env:ScriptAnalyzerSeverity
      $end = Get-Date
      [TimeSpan]$duration = $end - $start
      if ($res) {
          $resultString = $res | Out-String
          Write-Warning $resultString
          Add-AppveyorMessage -Message "ScriptAnalyzer reported problems." -Category Error
          Update-AppveyorTest -Name 'ScriptAnalyzer' -Outcome Failed -ErrorMessage $resultString -Duration ([long]$duration.TotalMilliseconds)
          throw 'Tests failed'
      }
      else {
          Update-AppveyorTest -Name "ScriptAnalyzer" -Outcome Passed -Duration ([long]$duration.TotalMilliseconds)
      }
